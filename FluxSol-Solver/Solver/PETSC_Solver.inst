
namespace FluxSol {

template
PETSC_KSP_Solver<double>::PETSC_KSP_Solver();

template
PETSC_KSP_Solver<double>::PETSC_KSP_Solver(const int &d);

template
void PETSC_KSP_Solver<double>::PETSC_Init();

template
void PETSC_KSP_Solver<double>::PreAllocateRows(const vector <int> &nnz);

template
void PETSC_KSP_Solver<double>::PreAllocateRows(const PetscInt &cols);

template
void PETSC_KSP_Solver<double>::Solve();

template
void PETSC_KSP_Solver<double>::InsertRow(const int &row, const std::vector<int> &cols, const std::vector <double> &vals);

template
void PETSC_KSP_Solver<double>::SetMatVal(const PetscInt &row, const PetscInt &col, const PetscScalar &value);

template
void PETSC_KSP_Solver<double>::AddMatVal(const PetscInt &row, const PetscInt &col, const PetscScalar &value);

template
void PETSC_KSP_Solver<double>::ViewInfo();

template
void PETSC_KSP_Solver<double>::SetbValues(const PetscInt &row, const PetscScalar &value);

template
void PETSC_KSP_Solver<double>::AddbValues(const PetscInt &row, const PetscScalar &value);

template
void PETSC_KSP_Solver<double>::SetbValues(const PetscScalar &value);


template
const std::vector <double> PETSC_KSP_Solver<double>::X() const;

template
const double PETSC_KSP_Solver<double>::X(const int &i) const;

template
const std::vector <double> PETSC_KSP_Solver<double>::B() const;

template
const double PETSC_KSP_Solver<double>::B(const int &i) const;

//TO MODIFY

template
void PETSC_KSP_Solver<double>::Solve(EqnSystem <Scalar> &eq);

template
void PETSC_KSP_Solver<double>::Solve(EqnSystem <Vec3D> &eq);

template
void Solve(EqnSystem <Scalar> &eq);

template
void Solve(EqnSystem <Vec3D> &eq);

}
